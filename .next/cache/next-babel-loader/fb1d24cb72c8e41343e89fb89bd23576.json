{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\front\\\\Documents\\\\GitHub\\\\portfolio\\\\components\\\\Card\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Card = /*#__PURE__*/function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      clickable: _this.props.clickable,\n      //If the card is clickable or not\n      hover: false //whether the card should hover or not\n\n    };\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //checks to see if hover is true and which style to choose\n      var linkStyle;\n\n      if (this.state.hover) {\n        linkStyle = {\n          width: '100%',\n          height: this.props.height,\n          background: '#F0F0F0',\n          cursor: 'pointer'\n        };\n      } else {\n        linkStyle = {\n          width: '100%',\n          height: this.props.height,\n          background: '#E8E8E8'\n        };\n      }\n\n      if (this.state.clickable) {\n        //the Card that is created if clickable is true\n        return __jsx(\"div\", {\n          style: linkStyle,\n          onMouseEnter: function onMouseEnter() {\n            return _this2.setState({\n              hover: !_this2.state.hover\n            });\n          },\n          onMouseLeave: function onMouseLeave() {\n            return _this2.setState({\n              hover: !_this2.state.hover\n            });\n          },\n          onClick: function onClick() {\n            return _this2.props.onClick;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }\n        }, this.props.children); //the card that is created if false\n      } else {\n        return __jsx(\"div\", {\n          style: {\n            width: '100%',\n            height: this.props.height,\n            background: '#E8E8E8'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, this.props.children);\n      }\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nexport { Card as default };","map":{"version":3,"sources":["C:/Users/front/Documents/GitHub/portfolio/components/Card/index.js"],"names":["Card","props","state","clickable","hover","linkStyle","width","height","background","cursor","setState","onClick","children","React","Component"],"mappings":";;;;;;;;;;;;;IAAqBA,I;;;;;AACjB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWE,SADb;AAC0B;AACnCC,MAAAA,KAAK,EAAE,KAFE,CAEW;;AAFX,KAAb;AAHe;AAOlB;;;;6BAEQ;AAAA;;AACL;AACA,UAAIC,SAAJ;;AACA,UAAG,KAAKH,KAAL,CAAWE,KAAd,EAAoB;AAChBC,QAAAA,SAAS,GAAC;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,MAApC;AAA4CC,UAAAA,UAAU,EAAE,SAAxD;AAAmEC,UAAAA,MAAM,EAAE;AAA3E,SAAV;AACH,OAFD,MAEK;AACDJ,QAAAA,SAAS,GAAC;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,MAApC;AAA4CC,UAAAA,UAAU,EAAE;AAAxD,SAAV;AACH;;AAGD,UAAI,KAAKN,KAAL,CAAWC,SAAf,EAA0B;AACtB;AACA,eACI;AAAK,UAAA,KAAK,EAAEE,SAAZ;AAAuB,UAAA,YAAY,EAAE;AAAA,mBAAM,MAAI,CAACK,QAAL,CAAc;AAACN,cAAAA,KAAK,EAAE,CAAC,MAAI,CAACF,KAAL,CAAWE;AAApB,aAAd,CAAN;AAAA,WAArC;AAAsF,UAAA,YAAY,EAAE;AAAA,mBAAM,MAAI,CAACM,QAAL,CAAc;AAACN,cAAAA,KAAK,EAAE,CAAC,MAAI,CAACF,KAAL,CAAWE;AAApB,aAAd,CAAN;AAAA,WAApG;AAAqJ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACH,KAAL,CAAWU,OAAjB;AAAA,WAA9J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKV,KAAL,CAAWW,QADhB,CADJ,CAFsB,CAQtB;AACH,OATD,MASO;AACH,eACI;AAAK,UAAA,KAAK,EAAE;AAAEN,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,MAApC;AAA4CC,YAAAA,UAAU,EAAE;AAAxD,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKP,KAAL,CAAWW,QADhB,CADJ;AAKH;AACJ;;;;EApC6BC,KAAK,CAACC,S;;SAAnBd,I","sourcesContent":["export default class Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clickable: this.props.clickable,   //If the card is clickable or not\r\n            hover: false        //whether the card should hover or not\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //checks to see if hover is true and which style to choose\r\n        var linkStyle;\r\n        if(this.state.hover){\r\n            linkStyle={ width: '100%', height: this.props.height, background: '#F0F0F0', cursor: 'pointer'}\r\n        }else{\r\n            linkStyle={ width: '100%', height: this.props.height, background: '#E8E8E8'}\r\n        }\r\n\r\n\r\n        if (this.state.clickable) {\r\n            //the Card that is created if clickable is true\r\n            return (\r\n                <div style={linkStyle} onMouseEnter={() => this.setState({hover: !this.state.hover})} onMouseLeave={() => this.setState({hover: !this.state.hover})} onClick={() => this.props.onClick}>\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n\r\n            //the card that is created if false\r\n        } else {\r\n            return (\r\n                <div style={{ width: '100%', height: this.props.height, background: '#E8E8E8'}}>\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}