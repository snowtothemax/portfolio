{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\front\\\\Documents\\\\GitHub\\\\portfolio\\\\components\\\\Card\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Card = /*#__PURE__*/function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      clickable: _this.props.clickable,\n      //If the card is clickable or not\n      hover: false //whether the card should hover or not\n\n    };\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //checks to see if hover is true and which style to choose\n      var linkStyle;\n\n      if (this.state.hover) {\n        linkStyle = {\n          width: this.props.width,\n          maxHeight: this.props.height,\n          background: '#FFFFFF',\n          cursor: 'pointer',\n          flexDirection: 'column',\n          display: 'flex',\n          alignItems: 'center',\n          opacity: 1\n        };\n      } else {\n        linkStyle = {\n          width: this.props.width,\n          maxHeight: this.props.height,\n          background: '#FFFFFF',\n          flexDirection: 'column',\n          display: 'flex',\n          alignItems: 'center',\n          opacity: .4\n        };\n      }\n\n      if (this.state.clickable) {\n        //the Card that is created if clickable is true\n        return __jsx(\"div\", {\n          style: linkStyle,\n          onMouseEnter: function onMouseEnter() {\n            return _this2.setState({\n              hover: !_this2.state.hover\n            });\n          },\n          onMouseLeave: function onMouseLeave() {\n            return _this2.setState({\n              hover: !_this2.state.hover\n            });\n          },\n          onClick: this.props.onClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }\n        }, this.props.children); //the card that is created if false\n      } else {\n        return __jsx(\"div\", {\n          style: {\n            width: this.props.width,\n            maxHeight: this.props.height,\n            background: '#FFFFFF',\n            flexDirection: 'row',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            textAlign: 'center',\n            position: 'relative'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, this.props.children);\n      }\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nexport { Card as default };","map":{"version":3,"sources":["C:/Users/front/Documents/GitHub/portfolio/components/Card/index.js"],"names":["Card","props","state","clickable","hover","linkStyle","width","maxHeight","height","background","cursor","flexDirection","display","alignItems","opacity","setState","onClick","children","justifyContent","textAlign","position","React","Component"],"mappings":";;;;;;;;;;;;;IAAqBA,I;;;;;AACjB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWE,SADb;AAC0B;AACnCC,MAAAA,KAAK,EAAE,KAFE,CAEW;;AAFX,KAAb;AAHe;AAOlB;;;;6BAEQ;AAAA;;AACL;AACA,UAAIC,SAAJ;;AACA,UAAG,KAAKH,KAAL,CAAWE,KAAd,EAAoB;AAChBC,QAAAA,SAAS,GAAC;AAAEC,UAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAApB;AAA2BC,UAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,MAAjD;AAAyDC,UAAAA,UAAU,EAAE,SAArE;AAAgFC,UAAAA,MAAM,EAAE,SAAxF;AAAmGC,UAAAA,aAAa,EAAE,QAAlH;AAA4HC,UAAAA,OAAO,EAAE,MAArI;AAA6IC,UAAAA,UAAU,EAAE,QAAzJ;AAAmKC,UAAAA,OAAO,EAAE;AAA5K,SAAV;AACH,OAFD,MAEK;AACDT,QAAAA,SAAS,GAAC;AAAEC,UAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAApB;AAA2BC,UAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,MAAjD;AAAyDC,UAAAA,UAAU,EAAE,SAArE;AAAgFE,UAAAA,aAAa,EAAE,QAA/F;AAAyGC,UAAAA,OAAO,EAAE,MAAlH;AAA0HC,UAAAA,UAAU,EAAE,QAAtI;AAAgJC,UAAAA,OAAO,EAAE;AAAzJ,SAAV;AACH;;AAGD,UAAI,KAAKZ,KAAL,CAAWC,SAAf,EAA0B;AACtB;AACA,eACI;AAAK,UAAA,KAAK,EAAEE,SAAZ;AAAuB,UAAA,YAAY,EAAE;AAAA,mBAAM,MAAI,CAACU,QAAL,CAAc;AAACX,cAAAA,KAAK,EAAE,CAAC,MAAI,CAACF,KAAL,CAAWE;AAApB,aAAd,CAAN;AAAA,WAArC;AAAsF,UAAA,YAAY,EAAE;AAAA,mBAAM,MAAI,CAACW,QAAL,CAAc;AAACX,cAAAA,KAAK,EAAE,CAAC,MAAI,CAACF,KAAL,CAAWE;AAApB,aAAd,CAAN;AAAA,WAApG;AAAqJ,UAAA,OAAO,EAAE,KAAKH,KAAL,CAAWe,OAAzK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKf,KAAL,CAAWgB,QADhB,CADJ,CAFsB,CAQtB;AACH,OATD,MASO;AACH,eACI;AAAK,UAAA,KAAK,EAAE;AAAEX,YAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAApB;AAA2BC,YAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,MAAjD;AAAyDC,YAAAA,UAAU,EAAE,SAArE;AAA+EE,YAAAA,aAAa,EAAE,KAA9F;AAAqGC,YAAAA,OAAO,EAAE,MAA9G;AAAsHC,YAAAA,UAAU,EAAE,QAAlI;AAA4IK,YAAAA,cAAc,EAAE,QAA5J;AAAsKC,YAAAA,SAAS,EAAE,QAAjL;AAA2LC,YAAAA,QAAQ,EAAE;AAArM,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKnB,KAAL,CAAWgB,QADhB,CADJ;AAKH;AACJ;;;;EApC6BI,KAAK,CAACC,S;;SAAnBtB,I","sourcesContent":["export default class Card extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clickable: this.props.clickable,   //If the card is clickable or not\n            hover: false        //whether the card should hover or not\n        }\n    }\n\n    render() {\n        //checks to see if hover is true and which style to choose\n        var linkStyle;\n        if(this.state.hover){\n            linkStyle={ width: this.props.width, maxHeight: this.props.height, background: '#FFFFFF', cursor: 'pointer', flexDirection: 'column', display: 'flex', alignItems: 'center', opacity: 1,}\n        }else{\n            linkStyle={ width: this.props.width, maxHeight: this.props.height, background: '#FFFFFF', flexDirection: 'column', display: 'flex', alignItems: 'center', opacity: .4}\n        }\n\n\n        if (this.state.clickable) {\n            //the Card that is created if clickable is true\n            return (\n                <div style={linkStyle} onMouseEnter={() => this.setState({hover: !this.state.hover})} onMouseLeave={() => this.setState({hover: !this.state.hover})} onClick={this.props.onClick}>\n                    {this.props.children}\n                </div>\n            )\n\n            //the card that is created if false\n        } else {\n            return (\n                <div style={{ width: this.props.width, maxHeight: this.props.height, background: '#FFFFFF',flexDirection: 'row', display: 'flex', alignItems: 'center', justifyContent: 'center', textAlign: 'center', position: 'relative', }}>\n                    {this.props.children}\n                </div>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}