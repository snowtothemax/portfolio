{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\front\\\\Documents\\\\GitHub\\\\portfolio\\\\components\\\\Card\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport default class Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickable: this.props.clickable,\n      //If the card is clickable or not\n      hover: false //whether the card should hover or not\n\n    };\n  } //function to toggle hover\n\n\n  toggleHover() {\n    this.setState({\n      hover: !this.state.hover\n    });\n  }\n\n  render() {\n    //checks to see if hover is true and which style to choose\n    var linkStyle;\n\n    if (this.state.hover) {\n      linkStyle = {\n        width: '100%',\n        height: this.props.height,\n        background: '#F0F0F0',\n        cursor: 'pointer'\n      };\n    } else {\n      linkStyle = {\n        width: '100%',\n        height: this.props.height,\n        background: '#E8E8E8'\n      };\n    }\n\n    if (this.state.clickable) {\n      //the Card that is created if clickable is true\n      return __jsx(\"div\", {\n        style: linkStyle,\n        onMouseEnter: this.toggleHover,\n        onMouseLeave: this.toggleHover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, this.props.children); //the card that is created if false\n    } else {\n      return __jsx(\"div\", {\n        style: {\n          width: '100%',\n          height: this.props.height,\n          background: '#E8E8E8'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, this.props.children);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/front/Documents/GitHub/portfolio/components/Card/index.js"],"names":["Card","React","Component","constructor","props","state","clickable","hover","toggleHover","setState","render","linkStyle","width","height","background","cursor","children"],"mappings":";;;AAAA,eAAe,MAAMA,IAAN,SAAmBC,KAAK,CAACC,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SADb;AAC0B;AACnCC,MAAAA,KAAK,EAAE,KAFE,CAEW;;AAFX,KAAb;AAIH,GAR6C,CAU9C;;;AACAC,EAAAA,WAAW,GAAE;AACT,SAAKC,QAAL,CAAc;AAACF,MAAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAApB,KAAd;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL;AACA,QAAIC,SAAJ;;AACA,QAAG,KAAKN,KAAL,CAAWE,KAAd,EAAoB;AAChBI,MAAAA,SAAS,GAAC;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,KAAKT,KAAL,CAAWS,MAApC;AAA4CC,QAAAA,UAAU,EAAE,SAAxD;AAAmEC,QAAAA,MAAM,EAAE;AAA3E,OAAV;AACH,KAFD,MAEK;AACDJ,MAAAA,SAAS,GAAC;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,KAAKT,KAAL,CAAWS,MAApC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAV;AACH;;AAGD,QAAI,KAAKT,KAAL,CAAWC,SAAf,EAA0B;AACtB;AACA,aACI;AAAK,QAAA,KAAK,EAAEK,SAAZ;AAAuB,QAAA,YAAY,EAAE,KAAKH,WAA1C;AAAuD,QAAA,YAAY,EAAE,KAAKA,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,KAAL,CAAWY,QADhB,CADJ,CAFsB,CAQtB;AACH,KATD,MASO;AACH,aACI;AAAK,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,KAAKT,KAAL,CAAWS,MAApC;AAA4CC,UAAAA,UAAU,EAAE;AAAxD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKV,KAAL,CAAWY,QADhB,CADJ;AAKH;AACJ;;AAzC6C","sourcesContent":["export default class Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clickable: this.props.clickable,   //If the card is clickable or not\r\n            hover: false        //whether the card should hover or not\r\n        }\r\n    }\r\n\r\n    //function to toggle hover\r\n    toggleHover(){\r\n        this.setState({hover: !this.state.hover})\r\n    }\r\n\r\n    render() {\r\n        //checks to see if hover is true and which style to choose\r\n        var linkStyle;\r\n        if(this.state.hover){\r\n            linkStyle={ width: '100%', height: this.props.height, background: '#F0F0F0', cursor: 'pointer'}\r\n        }else{\r\n            linkStyle={ width: '100%', height: this.props.height, background: '#E8E8E8'}\r\n        }\r\n\r\n\r\n        if (this.state.clickable) {\r\n            //the Card that is created if clickable is true\r\n            return (\r\n                <div style={linkStyle} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover}>\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n\r\n            //the card that is created if false\r\n        } else {\r\n            return (\r\n                <div style={{ width: '100%', height: this.props.height, background: '#E8E8E8'}}>\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}